{"version":3,"sources":["../../Memes_Ranking-main/src/logo.png","../../Memes_Ranking-main/src/IMG_memes/meme_1.png","../../Memes_Ranking-main/src/IMG_memes/meme_2.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_3.png","../../Memes_Ranking-main/src/IMG_memes/meme_4.png","../../Memes_Ranking-main/src/IMG_memes/meme_5.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_6.png","../../Memes_Ranking-main/src/IMG_memes/meme_7.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_8.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_9.png","../../Memes_Ranking-main/src/IMG_memes/meme_10.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_11.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_12.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_13.png","../../Memes_Ranking-main/src/IMG_memes/meme_14.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_15.jpg","../../Memes_Ranking-main/src/IMG_memes/meme_16.png","../../Memes_Ranking-main/src/components/NavRanking.js","../../Memes_Ranking-main/src/components/Meme.js","../../Memes_Ranking-main/src/components/HotMemes.js","../../Memes_Ranking-main/src/components/RegularMemes.js","../../Memes_Ranking-main/src/components/FavouriteMemes.js","../../Memes_Ranking-main/src/components/MainPage.js","../../Memes_Ranking-main/src/components/Error404.js","../../Memes_Ranking-main/src/components/App.js","../../Memes_Ranking-main/src/serviceWorker.js","../../Memes_Ranking-main/src/index.js"],"names":["module","exports","__webpack_require__","p","NavRanking","react_default","a","createElement","className","react_router_dom","to","Meme","props","_props$meme","meme","title","img","upvotes","downvotes","id","star","click","favourite","cross","style","color","onClick","clickMemeTrue","clickMemeFalse","src","alt","disabled","upVotesCounter","downVotesCounter","HotMemes","hotMemesAll","memesAll","filter","map","components_Meme","key","Fragment","length","RegularMemes","regularMemesAll","FavouriteMemes","favouriteMemesAll","MainPage","hotRegularMemesAll","Error404","App","state","logo","meme_1","meme_2","meme_3","meme_4","meme_5","meme_6","meme_7","meme_8","meme_9","meme_10","meme_11","meme_12","meme_13","meme_14","meme_15","meme_16","Object","toConsumableArray","_this","forEach","setState","components_NavRanking","react_router","path","components_HotMemes","this","exact","components_MainPage","components_RegularMemes","git","status","components_FavouriteMemes","components_Error404","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kPC2BzBC,EAxBI,WACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,QAAZ,OACML,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAIvBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,YAAZ,aAGJL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,cAAaL,EAAAC,EAAAC,cAAA,8BCkCpBI,EApDF,SAACC,GACZ,IADsBC,EAMpBD,EAAME,KADAC,EALcF,EAKdE,MAAOC,EALOH,EAKPG,IAAKC,EALEJ,EAKFI,QAASC,EALPL,EAKOK,UAAWC,EALlBN,EAKkBM,GAAIC,EALtBP,EAKsBO,KAAMC,EAL5BR,EAK4BQ,MAAOC,EALnCT,EAKmCS,UAAWC,EAL9CV,EAK8CU,MAGpE,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAKQ,GACLV,EAAAC,EAAAC,cAAA,UAEAiB,OAAqB,IAAdF,EAbM,CACjBG,MAAO,QAYsC,KACzCjB,UAAU,WACVkB,QAAS,kBAAMd,EAAMe,cAAcR,KAEhCC,GAGHf,EAAAC,EAAAC,cAAA,UACAC,UAAU,UACVkB,QAAS,kBAAMd,EAAMgB,eAAeT,KAEjCI,IAILlB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUqB,IAAKb,EAAKc,IAAI,SACvCzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEwB,SAAUV,EACVb,UAAU,QACVkB,QAAS,kBAAMd,EAAMoB,eAAeb,KAEpCd,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQS,IAEzBZ,EAAAC,EAAAC,cAAA,UACEwB,SAAUV,EACVb,UAAU,UACVkB,QAAS,kBAAMd,EAAMqB,iBAAiBd,KAEtCd,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQU,MCbhBgB,EA/BE,SAACtB,GAChB,IAGMuB,EAHWvB,EAAMwB,SAASC,OAC9B,SAACvB,GAAD,OAAUA,EAAKG,QAAUH,EAAKI,UAAY,IAEfoB,IAAI,SAACxB,GAAD,OAC/BT,EAAAC,EAAAC,cAACgC,EAAD,CACEC,IAAK1B,EAAKK,GACVL,KAAMA,EACNkB,eAAgBpB,EAAMoB,eACtBC,iBAAkBrB,EAAMqB,iBACxBN,cAAef,EAAMe,cACrBC,eAAgBhB,EAAMgB,mBAI1B,OACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,gCAAwB4B,EAAYO,OAApC,MAEFrC,EAAAC,EAAAC,cAAA,WACG4B,EAAYO,OAAS,EACpBP,EAEA9B,EAAAC,EAAAC,cAAA,wECOKoC,EA/BM,SAAC/B,GACpB,IAGMgC,EAHehC,EAAMwB,SAASC,OAClC,SAACvB,GAAD,OAAUA,EAAKG,QAAUH,EAAKI,WAAa,IAERoB,IAAI,SAACxB,GAAD,OACvCT,EAAAC,EAAAC,cAACgC,EAAD,CACEC,IAAK1B,EAAKK,GACVL,KAAMA,EACNkB,eAAgBpB,EAAMoB,eACtBC,iBAAkBrB,EAAMqB,iBACxBN,cAAef,EAAMe,cACrBC,eAAgBhB,EAAMgB,mBAI1B,OACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,oCAA4BqC,EAAgBF,OAA5C,MAEFrC,EAAAC,EAAAC,cAAA,WACGqC,EAAgBF,OAAS,EACxBE,EAEAvC,EAAAC,EAAAC,cAAA,yDCkBKsC,EA1CQ,SAACjC,GACpB,IAGMkC,EAHgBlC,EAAMwB,SAASC,OACjC,SAACvB,GAAD,OAA6B,IAAnBA,EAAKQ,YAEqBgB,IAAI,SAACxB,GAAD,OAC1CT,EAAAC,EAAAC,cAACgC,EAAD,CACEC,IAAK1B,EAAKK,GACVL,KAAMA,EACNkB,eAAgBpB,EAAMoB,eACtBC,iBAAkBrB,EAAMqB,iBACxBN,cAAef,EAAMe,cACrBC,eAAgBhB,EAAMgB,mBAI1B,OACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,sCAA8BuC,EAAkBJ,OAAhD,MAEFrC,EAAAC,EAAAC,cAAA,WACGuC,EAAkBJ,OAAS,EAC1BI,EAEAzC,EAAAC,EAAAC,cAAA,oFCIGwC,EA5BE,SAACnC,GAChB,IAAMoC,EAAqBpC,EAAMwB,SAASE,IAAI,SAACxB,GAAD,OAC5CT,EAAAC,EAAAC,cAACgC,EAAD,CACEC,IAAK1B,EAAKK,GACVL,KAAMA,EACNkB,eAAgBpB,EAAMoB,eACtBC,iBAAkBrB,EAAMqB,iBACxBN,cAAef,EAAMe,cACrBC,eAAgBhB,EAAMgB,mBAI1B,OACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,gCAAwByC,EAAmBN,OAA3C,MAEFrC,EAAAC,EAAAC,cAAA,WACGyC,EAAmBN,OAAS,EAC3BM,EAEA3C,EAAAC,EAAAC,cAAA,yDCdK0C,EATE,WACf,OACE5C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,8WCgVS2C,8MAxTbC,MAAQ,CACNC,KAAM,CACJ,CACEA,KAAMA,OAIVhB,SAAU,CACR,CACEjB,GAAI,EACJJ,MAAO,SACPE,QAAS,GACTC,WAAY,EACZF,IAAKqC,IACLjC,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,EACJJ,MAAO,SACPE,QAAS,EACTC,WAAY,EACZF,IAAKsC,IACLlC,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAG/C,CACEW,GAAI,EACJJ,MAAO,SACPE,QAAS,EACTC,WAAY,EACZF,IAAKuC,IACLnC,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,EACJJ,MAAO,SACPE,QAAS,EACTC,UAAW,EACXF,IAAKwC,IACLpC,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,EACJJ,MAAO,SACPE,QAAS,GACTC,WAAY,EACZF,IAAKyC,IACLrC,KAAOf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACpBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,EACJJ,MAAO,SACPE,QAAS,EACTC,UAAW,EACXF,IAAK0C,IACLtC,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,EACJJ,MAAO,SACPE,QAAS,GACTC,UAAW,EACXF,IAAK2C,IACLvC,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,EACJJ,MAAO,SACPE,QAAS,EACTC,UAAW,EACXF,IAAK4C,IACLxC,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,EACJJ,MAAO,SACPE,QAAS,EACTC,WAAY,EACZF,IAAK6C,IACLzC,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,GACJJ,MAAO,UACPE,QAAS,EACTC,UAAW,EACXF,IAAK8C,IACL1C,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,GACJJ,MAAO,UACPE,QAAS,GACTC,WAAY,EACZF,IAAK+C,IACL3C,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,GACJJ,MAAO,UACPE,QAAS,EACTC,UAAW,EACXF,IAAKgD,IACL5C,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,GACJJ,MAAO,UACPE,QAAS,EACTC,WAAY,GACZF,IAAKiD,IACL7C,KAAMf,EAAAC,EAAAC,cAAA,KAAIC,UAAU,qBACpBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,GACJJ,MAAO,UACPE,QAAS,EACTC,UAAW,EACXF,IAAKkD,IACL9C,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,GACJJ,MAAO,UACPE,QAAS,EACTC,WAAY,EACZF,IAAKmD,IACL/C,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,sBAE/C,CACEW,GAAI,GACJJ,MAAO,UACPE,QAAS,EACTC,UAAW,EACXF,IAAKoD,IACLhD,KAAMf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACnBa,OAAO,EACPC,WAAW,EACXC,MAAOlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,MAAO,OAASjB,UAAU,0BASnDyB,iBAAmB,SAACd,GAClB,IAAIiB,EAAQiC,OAAAC,EAAA,EAAAD,CAAOE,EAAKpB,MAAMf,UAC9BA,EAASoC,QAAQ,SAAC1D,GACZA,EAAKK,KAAOA,IACdL,EAAKI,UAAYJ,EAAKI,UAAY,EAClCJ,EAAKO,OAAQ,KAGjBkD,EAAKE,SAAS,CAAErC,gBAGlBJ,eAAiB,SAACb,GAChB,IAAIiB,EAAQiC,OAAAC,EAAA,EAAAD,CAAOE,EAAKpB,MAAMf,UAC9BA,EAASoC,QAAQ,SAAC1D,GACZA,EAAKK,KAAOA,IACdL,EAAKG,QAAUH,EAAKG,QAAU,EAC9BH,EAAKO,OAAQ,KAGjBkD,EAAKE,SAAS,CAAErC,gBAIlBT,cAAgB,SAACR,GACf,IAAIiB,EAAQiC,OAAAC,EAAA,EAAAD,CAAOE,EAAKpB,MAAMf,UAC9BA,EAASoC,QAAQ,SAAC1D,GACZA,EAAKK,KAAOA,IACdL,EAAKQ,WAAY,KAKrBiD,EAAKE,SAAS,CAAErC,gBAIlBR,eAAiB,SAACT,GAChB,IAAIiB,EAAQiC,OAAAC,EAAA,EAAAD,CAAOE,EAAKpB,MAAMf,UAC9BA,EAASoC,QAAQ,SAAC1D,GACZA,EAAKK,KAAOA,IACdL,EAAKQ,WAAY,KAKrBiD,EAAKE,SAAS,CAAErC,sFAShB,OACE/B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACPL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUqB,IAAKuB,KAAMtB,IAAI,UAE1CzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,kBACAH,EAAAC,EAAAC,cAACmE,EAAD,OAEFrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACEtE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOC,KAAK,QACVvE,EAAAC,EAAAC,cAACsE,EAAD,CACEzC,SAAU0C,KAAK3B,MAAMf,SACrBJ,eAAgB8C,KAAK9C,eACrBC,iBAAkB6C,KAAK7C,iBACvBN,cAAemD,KAAKnD,cACpBC,eAAgBkD,KAAKlD,kBAGzBvB,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOI,OAAK,EAACH,KAAK,KAChBvE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAUjE,GAAG,MACbL,EAAAC,EAAAC,cAACyE,EAAD,CACE5C,SAAU0C,KAAK3B,MAAMf,SACrBJ,eAAgB8C,KAAK9C,eACrBC,iBAAkB6C,KAAK7C,iBACvBN,cAAemD,KAAKnD,cACpBC,eAAgBkD,KAAKlD,kBAIzBvB,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOC,KAAK,YACVvE,EAAAC,EAAAC,cAAC0E,EAAD,CACE7C,SAAU0C,KAAK3B,MAAMf,SACrBJ,eAAgB8C,KAAK9C,eACrBC,iBAAkB6C,KAAK7C,iBACvBN,cAAemD,KAAKnD,cACpBC,eAAgBkD,KAAKlD,eAAesD,KAAG,EAACC,QAAM,KAGlD9E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOC,KAAK,cACVvE,EAAAC,EAAAC,cAAC6E,EAAD,CACEhD,SAAU0C,KAAK3B,MAAMf,SACrBJ,eAAgB8C,KAAK9C,eACrBC,iBAAkB6C,KAAK7C,iBACvBN,cAAemD,KAAKnD,cACpBC,eAAgBkD,KAAKlD,kBAGzBvB,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOC,KAAK,KACVvE,EAAAC,EAAAC,cAAC8E,EAAD,UAKRhF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,iDAjTM+E,aCjBEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,GAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.35046e93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e13bfb62.png\";","module.exports = __webpack_public_path__ + \"static/media/meme_1.c3c2f342.png\";","module.exports = __webpack_public_path__ + \"static/media/meme_2.9daef0fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_3.a2357457.png\";","module.exports = __webpack_public_path__ + \"static/media/meme_4.6ea0260a.png\";","module.exports = __webpack_public_path__ + \"static/media/meme_5.5ad85413.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_6.ad8a4322.png\";","module.exports = __webpack_public_path__ + \"static/media/meme_7.8facd1c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_8.5e6c0a83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_9.d18cfc86.png\";","module.exports = __webpack_public_path__ + \"static/media/meme_10.ec788ed5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_11.fbea1c70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_12.f207e0b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_13.708ea31d.png\";","module.exports = __webpack_public_path__ + \"static/media/meme_14.7c1e29b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_15.f4308389.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme_16.1029da2d.png\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavRanking = () => {\n  return (\n    <div className=\"hotRegular\">\n      <ul>\n        <li className=\"hot\">\n          <NavLink to=\"/hot\">\n            HOT <i className=\"far fa-arrow-alt-circle-up\"></i>\n          </NavLink>\n        </li>\n      </ul>\n      <ul>\n        <li className=\"regular\">\n          <NavLink to=\"/regular\">REGULAR</NavLink>\n        </li>\n      </ul>\n      <ul>\n        <li className=\"favourite\">\n          <NavLink to=\"/favourite\"><span>FAVOURITE</span></NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavRanking;\n","import React from \"react\";\n\nconst Meme = (props) => {\n  const changeStar = {\n    color: \"gold\",\n  };\n\n  const { title, img, upvotes, downvotes, id, star, click, favourite, cross} =\n    props.meme;\n\n  return (\n    <div className=\"memeBox\">\n      <div className=\"titleStar\">\n        <h3>{title}</h3>\n        <button\n\n        style={favourite === true ? changeStar : null}\n        className=\"starGold\"\n        onClick={() => props.clickMemeTrue(id)}\n        >\n          {star}\n\n        </button>\n        <button\n        className=\"starRed\"\n        onClick={() => props.clickMemeFalse(id)}\n          >\n          {cross}\n\n        </button>\n      </div>\n      <hr />\n      <img className=\"memeImg\" src={img} alt=\"meme\"></img>\n      <hr />\n      <button\n        disabled={click}\n        className=\"upBtn\"\n        onClick={() => props.upVotesCounter(id)}\n      >\n        <i className=\"far fa-thumbs-up up\"></i>\n        <div className=\"vote\">{upvotes}</div>\n      </button>\n      <button\n        disabled={click}\n        className=\"downBtn\"\n        onClick={() => props.downVotesCounter(id)}\n      >\n        <i className=\"far fa-thumbs-down down\"></i>\n        <div className=\"vote\">{downvotes}</div>\n      </button>\n    </div>\n  );\n};\n\nexport default Meme;\n","import React from \"react\";\nimport \"./App.css\";\nimport Meme from \"./Meme\";\n\nconst HotMemes = (props) => {\n  const hotMemes = props.memesAll.filter(\n    (meme) => meme.upvotes + meme.downvotes > 5\n  );\n  const hotMemesAll = hotMemes.map((meme) => (\n    <Meme\n      key={meme.id}\n      meme={meme}\n      upVotesCounter={props.upVotesCounter}\n      downVotesCounter={props.downVotesCounter}\n      clickMemeTrue={props.clickMemeTrue}\n      clickMemeFalse={props.clickMemeFalse}\n    />\n  ));\n\n  return (\n    <>\n      <center>\n        <h5>Hot memes counter ({hotMemesAll.length})</h5>\n      </center>\n      <div>\n        {hotMemesAll.length > 0 ? (\n          hotMemesAll\n        ) : (\n          <h1>Ranking is empty...it's so sad...Are you sure? VOTE NOW</h1>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default HotMemes;\n","import React from \"react\";\nimport \"./App.css\";\nimport Meme from \"./Meme\";\n\nconst RegularMemes = (props) => {\n  const regularMemes = props.memesAll.filter(\n    (meme) => meme.upvotes + meme.downvotes <= 5\n  );\n  const regularMemesAll = regularMemes.map((meme) => (\n    <Meme\n      key={meme.id}\n      meme={meme}\n      upVotesCounter={props.upVotesCounter}\n      downVotesCounter={props.downVotesCounter}\n      clickMemeTrue={props.clickMemeTrue}\n      clickMemeFalse={props.clickMemeFalse}\n    />\n  ));\n\n  return (\n    <>\n      <center>\n        <h5>Regular memes counter ({regularMemesAll.length})</h5>\n      </center>\n      <div>\n        {regularMemesAll.length > 0 ? (\n          regularMemesAll\n        ) : (\n          <h1>Ranking is empty...Time for more memes!!</h1>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default RegularMemes;\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Meme from \"./Meme\";\r\n\r\nconst FavouriteMemes = (props) => {\r\n    const favouriteMeme = props.memesAll.filter(\r\n        (meme) => meme.favourite === true\r\n      );\r\n    const favouriteMemesAll = favouriteMeme.map((meme) => (\r\n      <Meme\r\n        key={meme.id}\r\n        meme={meme}\r\n        upVotesCounter={props.upVotesCounter}\r\n        downVotesCounter={props.downVotesCounter}\r\n        clickMemeTrue={props.clickMemeTrue}\r\n        clickMemeFalse={props.clickMemeFalse}\r\n      />\r\n    ));\r\n  \r\n    return (\r\n      <>\r\n        <center>\r\n          <h5>Favourite memes counter ({favouriteMemesAll.length})</h5>\r\n        </center>\r\n        <div>\r\n          {favouriteMemesAll.length > 0 ? (\r\n            favouriteMemesAll \r\n          ) : (\r\n            <h1>Favourite memes ranking is empty...you don't have favourite memes!!</h1>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default FavouriteMemes;\r\n\r\n\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Meme from \"./Meme\";\n\nconst MainPage = (props) => {\n  const hotRegularMemesAll = props.memesAll.map((meme) => (\n    <Meme\n      key={meme.id}\n      meme={meme}\n      upVotesCounter={props.upVotesCounter}\n      downVotesCounter={props.downVotesCounter}\n      clickMemeTrue={props.clickMemeTrue}\n      clickMemeFalse={props.clickMemeFalse}\n    />\n  ));\n\n  return (\n    <>\n      <center>\n        <h5>All memes counter ({hotRegularMemesAll.length})</h5>\n      </center>\n      <div>\n        {hotRegularMemesAll.length > 0 ? (\n          hotRegularMemesAll\n        ) : (\n          <h1>Ranking is empty...Time for more memes!!</h1>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\n\nconst Error404 = () => {\n  return (\n    <div>\n      <h1>ERROR 404 UPS !!!</h1>\n      <h2>Why are you here? Come on, don't waste your time...</h2>\n    </div>\n  );\n};\n\nexport default Error404;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavRanking from \"./NavRanking\";\nimport HotMemes from \"./HotMemes\";\nimport RegularMemes from \"./RegularMemes\";\nimport FavouriteMemes from \"./FavouriteMemes\";\nimport MainPage from \"./MainPage\";\nimport Error404 from \"./Error404\";\nimport { BrowserRouter, Switch, Redirect, Route, Link } from \"react-router-dom\";\n\nimport meme_1 from \"../IMG_memes/meme_1.png\";\nimport meme_2 from \"../IMG_memes/meme_2.jpg\";\nimport meme_3 from \"../IMG_memes/meme_3.png\";\nimport meme_4 from \"../IMG_memes/meme_4.png\";\nimport meme_5 from \"../IMG_memes/meme_5.jpg\";\nimport meme_6 from \"../IMG_memes/meme_6.png\";\nimport meme_7 from \"../IMG_memes/meme_7.jpg\";\nimport meme_8 from \"../IMG_memes/meme_8.jpg\";\nimport meme_9 from \"../IMG_memes/meme_9.png\";\nimport meme_10 from \"../IMG_memes/meme_10.jpg\";\nimport meme_11 from \"../IMG_memes/meme_11.jpg\";\nimport meme_12 from \"../IMG_memes/meme_12.jpg\";\nimport meme_13 from \"../IMG_memes/meme_13.png\";\nimport meme_14 from \"../IMG_memes/meme_14.jpg\";\nimport meme_15 from \"../IMG_memes/meme_15.jpg\";\nimport meme_16 from \"../IMG_memes/meme_16.png\";\n\nimport logo from \"../logo.png\";\n\nclass App extends Component {\n  state = {\n    logo: [\n      {\n        logo: logo,\n      },\n    ],\n\n    memesAll: [\n      {\n        id: 1,\n        title: \"Meme 1\",\n        upvotes: 16,\n        downvotes: -4,\n        img: meme_1,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 2,\n        title: \"Meme 2\",\n        upvotes: 1,\n        downvotes: -2,\n        img: meme_2,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n        \n      },\n      {\n        id: 3,\n        title: \"Meme 3\",\n        upvotes: 6,\n        downvotes: -6,\n        img: meme_3,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 4,\n        title: \"Meme 4\",\n        upvotes: 0,\n        downvotes: 0,\n        img: meme_4,\n        star: <i className=\"far fa-star star\"></i>,        \n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 5,\n        title: \"Meme 5\",\n        upvotes: 40,\n        downvotes: -1,\n        img: meme_5,\n        star:  <i className=\"far fa-star star\"></i>,       \n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 6,\n        title: \"Meme 6\",\n        upvotes: 0,\n        downvotes: 0,\n        img: meme_6,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 7,\n        title: \"Meme 7\",\n        upvotes: 10,\n        downvotes: 0,\n        img: meme_7,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 8,\n        title: \"Meme 8\",\n        upvotes: 0,\n        downvotes: 0,\n        img: meme_8,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 9,\n        title: \"Meme 9\",\n        upvotes: 5,\n        downvotes: -1,\n        img: meme_9,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 10,\n        title: \"Meme 10\",\n        upvotes: 2,\n        downvotes: 0,\n        img: meme_10,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 11,\n        title: \"Meme 11\",\n        upvotes: 35,\n        downvotes: -5,\n        img: meme_11,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 12,\n        title: \"Meme 12\",\n        upvotes: 0,\n        downvotes: 0,\n        img: meme_12,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 13,\n        title: \"Meme 13\",\n        upvotes: 3,\n        downvotes: -20,\n        img: meme_13,\n        star: <i  className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 14,\n        title: \"Meme 14\",\n        upvotes: 0,\n        downvotes: 0,\n        img: meme_14,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 15,\n        title: \"Meme 15\",\n        upvotes: 0,\n        downvotes: -3,\n        img: meme_15,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n      {\n        id: 16,\n        title: \"Meme 16\",\n        upvotes: 6,\n        downvotes: 0,\n        img: meme_16,\n        star: <i className=\"far fa-star star\"></i>,\n        click: false,\n        favourite: false,\n        cross: <i style={{ color: \"red\" }} className=\"far fa-star star\"></i>,\n      },\n\n    ],\n\n \n \n  };\n\n  downVotesCounter = (id) => {\n    let memesAll = [...this.state.memesAll];\n    memesAll.forEach((meme) => {\n      if (meme.id === id) {\n        meme.downvotes = meme.downvotes - 1;\n        meme.click = true;\n      } \n    });\n    this.setState({ memesAll });\n  };\n\n  upVotesCounter = (id) => {\n    let memesAll = [...this.state.memesAll];\n    memesAll.forEach((meme) => {\n      if (meme.id === id) {\n        meme.upvotes = meme.upvotes + 1;\n        meme.click = true;\n      }\n    });\n    this.setState({ memesAll });\n  };\n\n \n  clickMemeTrue = (id) => {\n    let memesAll = [...this.state.memesAll];\n    memesAll.forEach((meme) => {\n      if (meme.id === id) {\n        meme.favourite = true;\n      }\n   \n     });\n\n    this.setState({ memesAll });\n  };\n\n  \n  clickMemeFalse = (id) => {\n    let memesAll = [...this.state.memesAll];\n    memesAll.forEach((meme) => {\n      if (meme.id === id) {\n        meme.favourite = false;\n      }\n   \n     });\n\n    this.setState({ memesAll });\n  };\n\n\n\n\n\n\n  render() {\n    return (\n      <>\n        <div className=\"container\">\n          <BrowserRouter>\n            <div className=\"nav\">\n              <Link to=\"/\">\n                <img className=\"logoImg\" src={logo} alt=\"logo\"></img>\n              </Link>\n              <p className=\"memes\">Memes Top List</p>\n              <NavRanking />\n            </div>\n            <div className=\"pagesPath\">\n              <Switch>\n                <Route path=\"/hot\">\n                  <HotMemes\n                    memesAll={this.state.memesAll}\n                    upVotesCounter={this.upVotesCounter}\n                    downVotesCounter={this.downVotesCounter}\n                    clickMemeTrue={this.clickMemeTrue}\n                    clickMemeFalse={this.clickMemeFalse}\n                  />\n                </Route>\n                <Route exact path=\"/\">\n                  <Redirect to=\"/\" />\n                  <MainPage\n                    memesAll={this.state.memesAll}\n                    upVotesCounter={this.upVotesCounter}\n                    downVotesCounter={this.downVotesCounter}\n                    clickMemeTrue={this.clickMemeTrue}\n                    clickMemeFalse={this.clickMemeFalse}\n\n                  />\n                </Route>\n                <Route path=\"/regular\">\n                  <RegularMemes\n                    memesAll={this.state.memesAll}\n                    upVotesCounter={this.upVotesCounter}\n                    downVotesCounter={this.downVotesCounter}\n                    clickMemeTrue={this.clickMemeTrue}\n                    clickMemeFalse={this.clickMemeFalse}git status \n                  />\n                </Route>\n                <Route path=\"/favourite\">\n                  <FavouriteMemes\n                    memesAll={this.state.memesAll}\n                    upVotesCounter={this.upVotesCounter}\n                    downVotesCounter={this.downVotesCounter}\n                    clickMemeTrue={this.clickMemeTrue}\n                    clickMemeFalse={this.clickMemeFalse}\n                  />\n                </Route>\n                <Route path=\"*\">\n                  <Error404 />\n                </Route>\n              </Switch>\n            </div>\n          </BrowserRouter>\n          <footer>\n            <p>Copyright © 2021 - 2022</p>\n          </footer>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport App from './components/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}